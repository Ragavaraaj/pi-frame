name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.0'

      - name: Install dependencies
        run: go mod tidy

      - name: Build executable
        run: make build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: photo-frame
          path: build/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with full history and tags
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: photo-frame
          path: build/

      - name: Generate tag dynamically
        id: generate
        run: |
          git fetch --tags
          latest_tag=$(git tag -l "0.0.*" --sort=-v:refname | head -n 1)

          if [ -z "$latest_tag" ]; then
            new_tag="0.0.1"
          else
            patch=$(echo "$latest_tag" | cut -d '.' -f3)
            new_patch=$((patch + 1))
            new_tag="0.0.$new_patch"
          fi

          echo "Generated tag: $new_tag"
          echo "TAG=$new_tag" >> "$GITHUB_ENV" # Use GITHUB_ENV instead of GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          draft: false
          prerelease: false

      - name: Zip the build artifacts
        run: |
          cd build
          zip -r photo-frame.zip .
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/photo-frame.zip
          asset_name: photo-frame.zip
          asset_content_type: application/zip