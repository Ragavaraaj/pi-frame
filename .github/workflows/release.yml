name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.generate.outputs.TAG }}
    steps:
      - name: Checkout code with full history to fetch tags
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate tag dynamically
        id: generate
        run: |
          # Ensure that tags are up-to-date
          git fetch --tags
          echo "Fetched tags."
          
          # Get the latest tag matching the 0.0.* pattern
          latest_tag=$(git tag -l "0.0.*" --sort=-v:refname | head -n 1)
          echo "Latest tag: $latest_tag"
          
          if [ -z "$latest_tag" ]; then
            new_tag="0.0.1"
          else
            patch=$(echo "$latest_tag" | cut -d '.' -f3)
            new_patch=$((patch + 1))
            new_tag="0.0.$new_patch"
          fi
          
          echo "New tag: $new_tag"
          echo "TAG=$new_tag" >> $GITHUB_OUTPUT

      - name: Configure git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create and push tag
        run: |
          git tag $TAG
          git push origin $TAG

  build:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.0'

      - name: Install dependencies
        run: go mod tidy

      - name: Build executable
        run: make build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fbimage_display
          path: build/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with full history and tags
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: fbimage_display
          path: build/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.tag.outputs.TAG }}
          files: build/fbimage_display
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}